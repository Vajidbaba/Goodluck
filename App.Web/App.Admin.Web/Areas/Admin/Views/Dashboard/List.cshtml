@model IEnumerable<Common.Data.Models.Employee>

@{
    ViewData["Title"] = "Dashboard";
}
<h6 class="font-weight-bolder va-title v-color">Dashboard</h6>
<style>
    body {
        background-color: #f8f9fa;
    }

    .chat-container {
        height: 80vh;
    }

    .message {
        border-radius: 10px;
        max-width: 70%;
    }

    .message-text {
        word-wrap: break-word;
    }

    .sender-name {
        font-weight: bold;
    }

    .message-time {
        font-size: 0.8rem;
        color: #6c757d;
    }

    .input-group-text {
        cursor: pointer;
    }

    .admin-message {
        text-align: right;
    }
</style>


<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">Team Chat</div>
                <div class="card-body p-0 chat-container">
                    <!-- Chat messages -->
                    <div class="p-3" id="chat-messages">
                        <!-- Messages will be dynamically added here -->
                    </div>
                </div>
                <div class="card-footer">
                    <!-- Message input -->
                    <form id="message-form">
                        <div class="input-group">
                            <input type="text" class="form-control" id="message-input" placeholder="Type your message...">
                            <button type="submit" class="btn btn-primary">Send</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const chatMessages = document.getElementById('chat-messages');
            const messageForm = document.getElementById('message-form');
            const messageInput = document.getElementById('message-input');

            messageForm.addEventListener('submit', function (event) {
                event.preventDefault();
                const messageText = messageInput.value.trim();
                if (messageText !== '') {
                    sendMessage('Admin', messageText, true);
                    messageInput.value = '';
                }
            });

            function sendMessage(sender, message, isAdmin) {
                const messageDiv = document.createElement('div');
                messageDiv.classList.add('message', 'mb-3');

                const messageTextDiv = document.createElement('div');
                messageTextDiv.classList.add('message-text', 'p-2', 'bg-light');
                if (isAdmin) {
                    messageTextDiv.classList.add('admin-message');
                }

                const senderSpan = document.createElement('span');
                senderSpan.classList.add('sender-name');
                senderSpan.textContent = sender + ': ';

                const messageSpan = document.createElement('span');
                messageSpan.textContent = message;

                const timeSpan = document.createElement('span');
                timeSpan.classList.add('message-time');
                const now = new Date();
                const timeString = now.getHours().toString().padStart(2, '0') + ':' + now.getMinutes().toString().padStart(2, '0');
                timeSpan.textContent = timeString;

                messageTextDiv.appendChild(senderSpan);
                messageTextDiv.appendChild(messageSpan);
                messageTextDiv.appendChild(timeSpan);
                messageDiv.appendChild(messageTextDiv);

                chatMessages.appendChild(messageDiv);

                // Scroll to the bottom of the chat container
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }

            // Example: Sending initial message from Admin
            sendMessage('Admin', 'Welcome to the chat!', true);
        });
    </script>
}
@*
<div class="row">
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
        <div class="card rounded-3">
            <div class="card-body py-2 px-3">
                <div class="row">
                    <div class="col-8">
                        <div class="numbers">
                            <p class="text-sm mb-0 text-capitalize font-weight-bold">Processing</p>
                            <h5 class="font-weight-bolder mb-0">
                                @ViewBag.ProcessingCount

                            </h5>
                        </div>
                    </div>
                    <div class="col-4 text-end">
                        <div class="icon icon-shape bg-gradient-warning shadow  text-center border-radius-md">
                            <i class="ni ni-money-coins text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
        <div class="card rounded-3">
            <div class="card-body py-2 px-3">
                <div class="row">
                    <div class="col-8">
                        <div class="numbers">
                            <p class="text-sm mb-0 text-capitalize font-weight-bold">Shipped</p>
                            <h5 class="font-weight-bolder mb-0">
                                @ViewBag.ShippedCount

                            </h5>
                        </div>
                    </div>
                    <div class="col-4 text-end">
                        <div class="icon icon-shape bg-gradient-primary shadow text-center border-radius-md">
                            <i class="ni ni-world text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
        <div class="card rounded-3">
            <div class="card-body py-2 px-3">
                <div class="row">
                    <div class="col-8">
                        <div class="numbers">
                            <p class="text-sm mb-0 text-capitalize font-weight-bold">Delivered</p>
                            <h5 class="font-weight-bolder mb-0">
                                @ViewBag.DeliveredCount

                            </h5>
                        </div>
                    </div>
                    <div class="col-4 text-end">
                        <div class="icon icon-shape bg-gradient-success shadow text-center border-radius-md">
                            <i class="ni ni-cart text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-sm-6">
        <div class="card rounded-3">
            <div class="card-body py-2 px-3">
                <div class="row">
                    <div class="col-8">
                        <div class="numbers">
                            <p class="text-sm mb-0 text-capitalize font-weight-bold">Users</p>
                            <h5 class="font-weight-bolder mb-0">
                                @ViewBag.UserCount
                            </h5>
                        </div>
                    </div>
                    <div class="col-4 text-end">
                        <div class="icon icon-shape bg-gradient-dark shadow text-center border-radius-md">
                            <i class="ni ni-user-run text-lg opacity-10" aria-hidden="true"></i>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
*@

